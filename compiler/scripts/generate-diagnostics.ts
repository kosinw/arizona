import diagnosticCodes from '../src/diagnostics/messages.json';
import { promises as fs } from 'fs';
import dedent from 'dedent';
import * as path from 'path';
import * as prettier from 'prettier';

const config = require('../../prettier.config');

function truncate(str: string, n: number): string {
  return str.length > n ? str.substr(0, n) : str;
}

function formatAsEnumName(variant: string): string {
  return truncate(variant.replace(/\s+/gi, '_').toUpperCase(), 20);
}

async function main() {
  const buffer: string[] = [];

  buffer.push(dedent`
  /*
  * This file was generated by a script. Do not modify.
  */

  import { DiagnosticEntryTable } from './types';
  \n 
  `);

  buffer.push(dedent`
  export enum DiagnosticCode {
      ${Object.keys(diagnosticCodes)
        .map(
          (code) =>
            `${formatAsEnumName(diagnosticCodes[code].title)} = ${parseInt(
              code,
              10
            )}`
        )
        .join(',\n')}
  };
  \n
  `);

  buffer.push(dedent`
    export const diagnosticCodeTable: DiagnosticEntryTable = {
        ${Object.keys(diagnosticCodes)
          .map(
            (code) =>
              `${parseInt(code, 10)}: ${JSON.stringify(
                Object.assign(diagnosticCodes[code], {
                  code: parseInt(code, 10),
                })
              )}`
          )
          .join(',\n')}
    }
  `);

  const text = buffer.join('');

  // TODO(kosi): Get rid of this hack of faking a ts file
  const formattedText = prettier.format(
    text,
    Object.assign(config, { filepath: 'generated.ts' })
  );

  console.log(formattedText);

  await fs.writeFile(
    path.resolve(__dirname, '../src/diagnostics/generated.ts'),
    formattedText
  );
}

main().catch((err) => {
  process.exitCode = 1;
  console.error(err);
});
